{"version":3,"sources":["components/Loading.js","components/Header.js","components/Stats.js","components/Article.js","containers/Home.js","App.js","serviceWorker.js","index.js"],"names":["Loading","className","Header","name","resetCountry","to","onClick","Stats","data","locale","fatalityRate","recoveryRate","activeRate","toLocaleString","style","maximumFractionDigits","Date","year","month","day","hour","minute","timeZoneName","e","Article","href","includes","toLocaleDateString","src","alt","onLoad","target","parentNode","lastChild","backgroundImage","firstChild","classList","add","display","onError","Home","history","useHistory","useState","URLSearchParams","location","search","get","country","setCountry","stats","setStats","statsLoaded","setStatsLoaded","lastLoadedDate","setLastLoadedDate","loadNewStatsTimeout","setLoadNewStatsTimeout","articles","setArticles","articlesLoaded","setArticlesLoaded","shouldLoadMoreArticles","setShouldLoadMoreArticles","loadingMoreArticles","setLoadingMoreArticles","allArticlesLoaded","setAllArticlesLoaded","shouldRedirect","setShouldRedirect","redirectTimer","setRedirectTimer","allLoaded","setAllLoaded","result","CountryLocaleMap","toUpperCase","languages","undefined","useEffect","checkRefresh","ids","id","clearTimeout","slice","push","setTimeout","document","addEventListener","documentElement","scrollHeight","window","innerHeight","scrollTop","hidden","listen","action","body","remove","scrollRestoration","countryCode","axios","then","res","country_code","catch","err","timeline","logVal","Math","log2","hue","max","setProperty","finally","length","pageLoading","ceil","process","headers","totalResults","concat","setInterval","map","article","i","key","indexOf","App","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.2fe18fdb.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Loading() {\n  return (\n    <div className=\"Loading\">\n      <div className=\"LoadingRing\">\n        <div className=\"LoadingMask\"></div>\n      </div>\n      <h3 className=\"centered\">Loading...</h3>\n    </div>\n  );\n}\n\nexport default Loading;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header({ name, resetCountry }) {\n  return (\n    <>\n      <div className=\"Title\">\n        <Link to=\"./\" onClick={resetCountry}>\n          <h1>\n            COVID <span>|</span> Headline\n          </h1>\n        </Link>\n\n        <nav>\n          <Link to=\"./?country=US\" onClick={resetCountry}>\n            US\n          </Link>\n\n          <Link to=\"./?country=GB\" onClick={resetCountry}>\n            UK\n          </Link>\n\n          <Link to=\"./?country=CN\" onClick={resetCountry}>\n            China\n          </Link>\n\n          <Link to=\"./?country=RU\" onClick={resetCountry}>\n            Russia\n          </Link>\n\n          <Link to=\"./?country=JP\" onClick={resetCountry}>\n            Japan\n          </Link>\n        </nav>\n      </div>\n\n      {name ? (\n        <h2 className=\"Subtitle\">\n          Latest COVID&#8209;19 Statistics and Top Headlines in{\" \"}\n          <span>{name}</span>\n        </h2>\n      ) : (\n        <h2 className=\"Subtitle\">\n          Latest COVID&#8209;19 Statistics and Top Headlines\n        </h2>\n      )}\n    </>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Stats({ data, locale }) {\n  try {\n    const fatalityRate =\n      data[\"latest_data\"][\"deaths\"] / data[\"latest_data\"][\"confirmed\"];\n\n    const recoveryRate =\n      data[\"latest_data\"][\"recovered\"] / data[\"latest_data\"][\"confirmed\"];\n\n    const activeRate = 1 - fatalityRate - recoveryRate;\n\n    return (\n      <section className=\"Stats\">\n        <div className=\"NumberRow\">\n          <div>\n            <h4>Cases</h4>\n            <p className=\"Total\">\n              {data[\"latest_data\"][\"confirmed\"].toLocaleString(locale)} Total\n            </p>\n            {data[\"today\"] &&\n            (data[\"today\"][\"confirmed\"] || data[\"today\"][\"deaths\"]) ? (\n              <p className=\"Today\">\n                +{(data[\"today\"][\"confirmed\"] || 0).toLocaleString(locale)}{\" \"}\n                Today\n              </p>\n            ) : null}\n          </div>\n\n          <div>\n            <h4>Deaths</h4>\n            <p className=\"Total\">\n              {data[\"latest_data\"][\"deaths\"].toLocaleString(locale)} Total\n            </p>\n            {data[\"today\"] &&\n            (data[\"today\"][\"confirmed\"] || data[\"today\"][\"deaths\"]) ? (\n              <p className=\"Today\">\n                +{(data[\"today\"][\"deaths\"] || 0).toLocaleString(locale)} Today\n              </p>\n            ) : null}\n          </div>\n        </div>\n\n        <div className=\"PercentageRow\">\n          <div>\n            <h4>Active</h4>\n            <p>\n              {activeRate.toLocaleString(locale, {\n                style: \"percent\",\n                maximumFractionDigits: 2,\n              })}\n            </p>\n          </div>\n\n          <div>\n            <h4>Fatality</h4>\n            <p>\n              {fatalityRate.toLocaleString(locale, {\n                style: \"percent\",\n                maximumFractionDigits: 2,\n              })}\n            </p>\n          </div>\n\n          <div>\n            <h4>Recovered</h4>\n            <p>\n              {recoveryRate.toLocaleString(locale, {\n                style: \"percent\",\n                maximumFractionDigits: 2,\n              })}\n            </p>\n          </div>\n        </div>\n\n        {data[\"updated_at\"] ? (\n          <p className=\"UpdatedAt\">\n            Last updated at{\" \"}\n            <span>\n              {new Date(data[\"updated_at\"]).toLocaleString(locale, {\n                year: \"numeric\",\n                month: \"numeric\",\n                day: \"numeric\",\n                hour: \"numeric\",\n                minute: \"numeric\",\n                timeZoneName: \"short\",\n              })}\n            </span>\n          </p>\n        ) : null}\n      </section>\n    );\n  } catch (e) {\n    return null;\n  }\n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Article({ data, locale }) {\n  try {\n    return (\n      <a href={data[\"url\"]} className=\"Article\">\n        <div className={`ArticleInfo${data[\"urlToImage\"] ? \"\" : \" no-image\"}`}>\n          <h4>{data[\"title\"]}</h4>\n\n          {data[\"description\"] && !data[\"description\"].includes(\"�\") ? (\n            <p>{data[\"description\"]}</p>\n          ) : null}\n\n          {data[\"publishedAt\"] ? (\n            <p className=\"ArticleDate\">\n              {new Date(data[\"publishedAt\"]).toLocaleDateString(locale, {\n                year: \"numeric\",\n                month: \"long\",\n                day: \"numeric\",\n                hour: \"numeric\",\n                minute: \"numeric\",\n              })}\n            </p>\n          ) : null}\n        </div>\n\n        {data[\"urlToImage\"] ? (\n          <>\n            <img\n              className=\"ArticleImg\"\n              src={data[\"urlToImage\"]}\n              alt={data[\"title\"]}\n              onLoad={(e) => {\n                if (!e.target.parentNode.lastChild.style.backgroundImage) {\n                  e.target.parentNode.firstChild.classList.add(\"no-image\");\n                  e.target.parentNode.lastChild.style.display = \"none\";\n                  e.target.style.display = \"none\";\n                }\n              }}\n              onError={(e) => {\n                e.target.parentNode.firstChild.classList.add(\"no-image\");\n                e.target.parentNode.lastChild.style.display = \"none\";\n                e.target.style.display = \"none\";\n              }}\n            />\n\n            <div\n              className=\"ArticleImgContainer\"\n              style={{ backgroundImage: `url(${data[\"urlToImage\"]})` }}\n            ></div>\n          </>\n        ) : null}\n      </a>\n    );\n  } catch (e) {\n    return null;\n  }\n}\n\nexport default Article;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport * as CountryLocaleMap from \"country-locale-map\";\n\nimport Loading from \"../components/Loading\";\nimport Header from \"../components/Header\";\nimport Stats from \"../components/Stats\";\nimport Article from \"../components/Article\";\n\nfunction Home() {\n    const pageSize = 20;\n    const loadingDelay = 0;\n    const loadNewStatsInterval = 900000; // 15 min\n\n    const history = useHistory();\n    const [country, setCountry] = useState(\n        new URLSearchParams(history.location.search).get(\"country\") || \"\"\n    );\n    const [stats, setStats] = useState(null);\n    const [statsLoaded, setStatsLoaded] = useState(false);\n    const [lastLoadedDate, setLastLoadedDate] = useState(null);\n    const [loadNewStatsTimeout, setLoadNewStatsTimeout] = useState([]);\n\n    const [articles, setArticles] = useState([]);\n    const [articlesLoaded, setArticlesLoaded] = useState(false);\n    const [shouldLoadMoreArticles, setShouldLoadMoreArticles] = useState(false);\n    const [loadingMoreArticles, setLoadingMoreArticles] = useState(false);\n    const [allArticlesLoaded, setAllArticlesLoaded] = useState(false);\n\n    const [shouldRedirect, setShouldRedirect] = useState(false);\n    const [redirectTimer, setRedirectTimer] = useState(null);\n\n    const [allLoaded, setAllLoaded] = useState(false);\n\n    function locale() {\n        const result = CountryLocaleMap.getCountryByAlpha2(\n            country.toUpperCase()\n        );\n        return (result && result.languages && result.languages[0]) || undefined;\n    }\n\n    function resetCountry() {\n        document.body.classList.remove(\"Loaded\");\n        setTimeout(() => {\n            setCountry(\"\");\n        }, 1000);\n    }\n\n    function getLocation() {\n        setStats(null);\n        setStatsLoaded(false);\n        setLastLoadedDate(null);\n        setLoadNewStatsTimeout((ids) => {\n            for (const id of ids) {\n                clearTimeout(id);\n            }\n\n            return ids.slice(-3);\n        });\n        setArticles([]);\n        setArticlesLoaded(false);\n        setShouldLoadMoreArticles(false);\n        setLoadingMoreArticles(false);\n        setAllArticlesLoaded(false);\n        setShouldRedirect(false);\n        setRedirectTimer(null);\n        setAllLoaded(false);\n\n        if (!country) {\n            const countryCode = new URLSearchParams(\n                history.location.search\n            ).get(\"country\");\n\n            if (countryCode) {\n                setCountry(countryCode);\n                return;\n            }\n\n            axios\n                .get(`https://ipapi.co/json`)\n                .then((res) => {\n                    setCountry(res.data.country_code);\n                })\n                .catch((err) => {\n                    setCountry(\"US\");\n                });\n        }\n    }\n\n    function loadStats() {\n        if (country && !lastLoadedDate) {\n            for (const id of loadNewStatsTimeout) {\n                clearTimeout(id);\n            }\n\n            setLoadNewStatsTimeout((ids) => ids.slice(-3));\n\n            setTimeout(\n                () => {\n                    axios\n                        .get(`https://corona-api.com/countries/${country}`)\n                        .then((res) => {\n                            const data = res.data.data;\n                            delete data.timeline;\n                            setStats(data);\n\n                            const logVal = Math.log2(\n                                (data[\"latest_data\"][\"deaths\"] /\n                                    data[\"population\"]) *\n                                    1000000 +\n                                    1\n                            );\n\n                            const hue = Math.max(140 - 13.5 * logVal, 0);\n\n                            document.documentElement.style.setProperty(\n                                \"--light-accent-color\",\n                                `hsl(${hue}, 76%, 60%)`\n                            );\n\n                            document.documentElement.style.setProperty(\n                                \"--dark-accent-color\",\n                                `hsl(${hue}, 66%, 45%)`\n                            );\n                        })\n                        .catch((err) => {\n                            if (!stats) {\n                                document.documentElement.style.setProperty(\n                                    \"--light-accent-color\",\n                                    \"#eee\"\n                                );\n\n                                document.documentElement.style.setProperty(\n                                    \"--dark-accent-color\",\n                                    \"black\"\n                                );\n                            }\n                        })\n                        .finally(() => {\n                            setStatsLoaded(true);\n                            setLastLoadedDate(new Date());\n                            for (const id of loadNewStatsTimeout) {\n                                clearTimeout(id);\n                            }\n\n                            setLoadNewStatsTimeout((ids) => {\n                                ids.push(\n                                    setTimeout(() => {\n                                        setLastLoadedDate(null);\n                                    }, loadNewStatsInterval)\n                                );\n\n                                return ids.slice(-3);\n                            });\n                        });\n                },\n                statsLoaded ? loadingDelay : 0\n            );\n        }\n    }\n\n    function loadArticles() {\n        if (\n            country &&\n            (shouldLoadMoreArticles || articles.length < 1) &&\n            !allArticlesLoaded &&\n            !loadingMoreArticles\n        ) {\n            setLoadingMoreArticles(true);\n            setShouldLoadMoreArticles(false);\n\n            const pageLoading = Math.ceil(articles.length / pageSize) + 1;\n\n            axios\n                .get(\n                    `https://newsapi.org/v2/top-headlines?country=${country}&pageSize=${pageSize}&page=${pageLoading}&apiKey=${process.env.REACT_APP_NEWS_API_KEY}`,\n                    {\n                        headers: {\n                            \"Content-Type\": \"application/x-www-form-urlencoded\",\n                        },\n                    }\n                )\n                .then((res) => {\n                    if (\n                        res.data.articles.length < pageSize ||\n                        res.data.totalResults <=\n                            articles.length + res.data.articles.length\n                    ) {\n                        setAllArticlesLoaded(true);\n                    }\n                    setArticles(articles.concat(res.data.articles));\n                })\n                .catch((err) => {\n                    setAllArticlesLoaded(true);\n                })\n                .finally(() => {\n                    setArticlesLoaded(true);\n                    setLoadingMoreArticles(false);\n                });\n        } else {\n            setShouldLoadMoreArticles(false);\n        }\n    }\n\n    function addListners() {\n        function checkRefresh() {\n            setLastLoadedDate((lastLoadedDate) => {\n                if (\n                    lastLoadedDate &&\n                    new Date() - lastLoadedDate >= loadNewStatsInterval\n                ) {\n                    setLoadNewStatsTimeout((ids) => {\n                        for (const id of ids) {\n                            clearTimeout(id);\n                        }\n\n                        return ids.slice(-3);\n                    });\n                    return null;\n                } else {\n                    if (lastLoadedDate) {\n                        setLoadNewStatsTimeout((ids) => {\n                            for (const id of ids) {\n                                clearTimeout(id);\n                            }\n\n                            ids.push(\n                                setTimeout(() => {\n                                    setLastLoadedDate(null);\n                                }, loadNewStatsInterval - (new Date() - lastLoadedDate))\n                            );\n\n                            return ids.slice(-3);\n                        });\n                    }\n\n                    return lastLoadedDate;\n                }\n            });\n        }\n\n        document.addEventListener(\"scroll\", () => {\n            const scrollBottom =\n                document.documentElement.scrollHeight -\n                window.innerHeight -\n                document.documentElement.scrollTop;\n\n            if (scrollBottom < 1) {\n                setShouldLoadMoreArticles(true);\n            }\n\n            checkRefresh();\n        });\n\n        document.addEventListener(\"mousemove\", () => {\n            checkRefresh();\n        });\n\n        document.addEventListener(\"visibilitychange\", () => {\n            if (!document.hidden) {\n                checkRefresh();\n            }\n        });\n\n        window.addEventListener(\"focus\", () => {\n            checkRefresh();\n        });\n\n        history.listen(() => {\n            if (history.action === \"POP\") {\n                document.body.classList.remove(\"Loaded\");\n                setTimeout(() => {\n                    setCountry(\"\");\n                }, 1000);\n            }\n        });\n\n        window.history.scrollRestoration = \"manual\";\n    }\n\n    useEffect(addListners, [history]);\n    useEffect(getLocation, [country]);\n    useEffect(loadStats, [country, lastLoadedDate]);\n    useEffect(loadArticles, [country, shouldLoadMoreArticles]);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (statsLoaded && articlesLoaded) {\n                document.body.classList.add(\"Loaded\");\n            }\n            setAllLoaded(statsLoaded && articlesLoaded);\n        }, loadingDelay);\n    }, [statsLoaded, articlesLoaded]);\n\n    useEffect(() => {\n        if (allLoaded) {\n            const result =\n                !stats &&\n                country &&\n                ![\"US\", \"GB\", \"CN\", \"RU\", \"JP\"].includes(\n                    country.toUpperCase()\n                ) &&\n                allLoaded;\n\n            if (result && redirectTimer === null) {\n                setRedirectTimer(5);\n            }\n\n            setShouldRedirect(result);\n        }\n    }, [stats, country, allLoaded, redirectTimer]);\n\n    useEffect(() => {\n        if (shouldRedirect) {\n            if (redirectTimer === 5) {\n                setTimeout(() => {\n                    setInterval(() => {\n                        setRedirectTimer((redirectTimer) =>\n                            redirectTimer > 1 ? redirectTimer - 1 : 1\n                        );\n                    }, 1000);\n                }, 500);\n\n                setTimeout(() => {\n                    document.body.classList.remove(\"Loaded\");\n                    setTimeout(() => {\n                        history.push(\"./\");\n                        setCountry(\"\");\n                    }, 1000);\n                }, 5000);\n            }\n        }\n    }, [shouldRedirect, redirectTimer, history]);\n\n    return (\n        <>\n            <Loading />\n            {allLoaded ? (\n                <>\n                    <Header\n                        name={\n                            stats\n                                ? (country &&\n                                      CountryLocaleMap.getCountryNameByAlpha2(\n                                          country.toUpperCase()\n                                      )) ||\n                                  stats.name\n                                : \"\"\n                        }\n                        resetCountry={resetCountry}\n                    />\n                    <main>\n                        {stats ? (\n                            <>\n                                <Stats data={stats} locale={undefined} />\n                                <section className=\"Articles\">\n                                    {articles.map((article, i) => {\n                                        return (\n                                            <Article\n                                                key={i}\n                                                data={article}\n                                                locale={locale()}\n                                            />\n                                        );\n                                    })}\n                                    {articles.length > 0 &&\n                                    allArticlesLoaded ? (\n                                        <h3 className=\"centered AllLoaded\">\n                                            All Top Headlines Loaded\n                                        </h3>\n                                    ) : articles.length > 0 &&\n                                      loadingMoreArticles ? (\n                                        <h3 className=\"centered AllLoaded\">\n                                            Loading More Headlines…\n                                        </h3>\n                                    ) : null}\n                                </section>\n                            </>\n                        ) : shouldRedirect ? (\n                            <h3 className=\"centered\">\n                                No Statistics Found For{\" \"}\n                                {(country &&\n                                    CountryLocaleMap.getCountryNameByAlpha2(\n                                        country.toUpperCase()\n                                    )) ||\n                                    country.toUpperCase()}\n                                . Redirecting in {redirectTimer} Seconds.\n                            </h3>\n                        ) : (\n                            <h3 className=\"centered\">\n                                No Statistics Found For{\" \"}\n                                {[\n                                    \"United States\",\n                                    \"United Kingdom\",\n                                    \"China\",\n                                    \"Russian Federation\",\n                                    \"Japan\",\n                                ][\n                                    [\"US\", \"GB\", \"CN\", \"RU\", \"JP\"].indexOf(\n                                        country.toUpperCase()\n                                    )\n                                ] || country}\n                                . Please Check Your Connection.\n                            </h3>\n                        )}\n                    </main>\n                </>\n            ) : null}\n        </>\n    );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Home from \"./containers/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}