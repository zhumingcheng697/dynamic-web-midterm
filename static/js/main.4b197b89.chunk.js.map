{"version":3,"sources":["components/Loading.js","components/Header.js","components/Stats.js","components/Article.js","containers/Home.js","App.js","serviceWorker.js","index.js"],"names":["Loading","className","Header","name","href","Stats","data","locale","fatalityRate","recoveryRate","activeRate","toLocaleString","style","maximumFractionDigits","Date","year","month","day","hour","minute","timeZoneName","Article","includes","toLocaleDateString","src","alt","onLoad","e","target","parentNode","lastChild","backgroundImage","firstChild","classList","add","display","onError","Home","history","useHistory","useState","URLSearchParams","location","search","get","country","setCountry","stats","setStats","statsLoaded","setStatsLoaded","lastLoadedDate","setLastLoadedDate","loadNewStatsTimeout","setLoadNewStatsTimeout","articles","setArticles","articlesLoaded","setArticlesLoaded","shouldLoadMoreArticles","setShouldLoadMoreArticles","loadingMoreArticles","setLoadingMoreArticles","allArticlesLoaded","setAllArticlesLoaded","shouldRedirect","setShouldRedirect","redirectTimer","setRedirectTimer","allLoaded","setAllLoaded","result","CountryLocaleMap","toUpperCase","languages","undefined","useEffect","document","addEventListener","scrollBottom","documentElement","scrollHeight","clientHeight","scrollTop","isFinite","console","log","window","axios","then","res","country_code","catch","err","clearTimeout","timeline","setTimeout","logVal","Math","log2","hue","max","setProperty","warn","finally","length","pageLoading","ceil","process","headers","totalResults","concat","body","setInterval","remove","push","map","article","i","key","indexOf","App","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"4RAaeA,MAXf,WACE,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,iBAEjB,wBAAIA,UAAU,YAAd,gBC0BSC,MAhCf,YAA2B,IAATC,EAAQ,EAARA,KAChB,OACE,oCACE,yBAAKF,UAAU,SACb,uBAAGG,KAAK,MACN,qCACQ,mCADR,cAIF,6BACE,uBAAGA,KAAK,iBAAR,MACA,uBAAGA,KAAK,iBAAR,MACA,uBAAGA,KAAK,iBAAR,SACA,uBAAGA,KAAK,iBAAR,UACA,uBAAGA,KAAK,iBAAR,WAIHD,EACC,wBAAIF,UAAU,YAAd,uDACwD,IACtD,8BAAOE,IAGT,wBAAIF,UAAU,YAAd,uDCkEOI,MA1Ff,YAAkC,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OACrB,GAAID,EAAM,CACR,IAAME,EACJF,EAAI,YAAJ,OAAgCA,EAAI,YAAJ,UAE5BG,EACJH,EAAI,YAAJ,UAAmCA,EAAI,YAAJ,UAE/BI,EAAa,EAAIF,EAAeC,EAEtC,OACE,6BAASR,UAAU,SACjB,yBAAKA,UAAU,aACb,6BACE,qCACA,uBAAGA,UAAU,SACVK,EAAI,YAAJ,UAAiCK,eAAeJ,GADnD,UAGCD,EAAI,MAAJ,WAA8BA,EAAI,MAAJ,OAC7B,uBAAGL,UAAU,SAAb,IACIK,EAAI,MAAJ,UAA2BK,eAAeJ,GAD9C,UAGE,MAGN,6BACE,sCACA,uBAAGN,UAAU,SACVK,EAAI,YAAJ,OAA8BK,eAAeJ,GADhD,UAGCD,EAAI,MAAJ,WAA8BA,EAAI,MAAJ,OAC7B,uBAAGL,UAAU,SAAb,IACIK,EAAI,MAAJ,OAAwBK,eAAeJ,GAD3C,UAGE,OAIR,yBAAKN,UAAU,iBACb,6BACE,sCACA,2BACGS,EAAWC,eAAeJ,EAAQ,CACjCK,MAAO,UACPC,sBAAuB,MAK7B,6BACE,wCACA,2BACGL,EAAaG,eAAeJ,EAAQ,CACnCK,MAAO,UACPC,sBAAuB,MAK7B,6BACE,yCACA,2BACGJ,EAAaE,eAAeJ,EAAQ,CACnCK,MAAO,UACPC,sBAAuB,OAM/B,uBAAGZ,UAAU,aAAb,kBACkB,IAChB,8BACG,IAAIa,KAAKR,EAAI,YAAgBK,eAAeJ,EAAQ,CACnDQ,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,aAAc,aAOxB,OAAO,MClCIC,MApDf,YAAoC,IAAjBf,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OACvB,OAAID,EAEA,uBAAGF,KAAME,EAAI,IAASL,UAAU,WAC9B,yBAAKA,UAAS,qBAAgBK,EAAI,WAAiB,GAAK,cACtD,4BAAKA,EAAI,OACRA,EAAI,cAAoBA,EAAI,YAAgBgB,SAAS,UACpD,2BAAIhB,EAAI,aACN,KACJ,uBAAGL,UAAU,eACV,IAAIa,KAAKR,EAAI,aAAiBiB,mBAAmBhB,EAAQ,CACxDQ,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,cAKbb,EAAI,WACH,oCACE,yBACEL,UAAU,aACVuB,IAAKlB,EAAI,WACTmB,IAAKnB,EAAI,MACToB,OAAQ,SAACC,GACFA,EAAEC,OAAOC,WAAWC,UAAUlB,MAAMmB,kBACvCJ,EAAEC,OAAOC,WAAWG,WAAWC,UAAUC,IAAI,YAC7CP,EAAEC,OAAOC,WAAWC,UAAUlB,MAAMuB,QAAU,OAC9CR,EAAEC,OAAOhB,MAAMuB,QAAU,SAG7BC,QAAS,SAACT,GACRA,EAAEC,OAAOC,WAAWG,WAAWC,UAAUC,IAAI,YAC7CP,EAAEC,OAAOC,WAAWC,UAAUlB,MAAMuB,QAAU,OAC9CR,EAAEC,OAAOhB,MAAMuB,QAAU,UAG7B,yBACElC,UAAU,sBACVW,MAAO,CAAEmB,gBAAgB,OAAD,OAASzB,EAAI,WAAb,SAG1B,MAID,MC4PI+B,MApSf,WACE,IAIMC,EAAUC,cALF,EAMgBC,mBAC5B,IAAIC,gBAAgBH,EAAQI,SAASC,QAAQC,IAAI,YAAc,IAPnD,mBAMPC,EANO,KAMEC,EANF,OASYN,mBAAS,MATrB,mBASPO,EATO,KASAC,EATA,OAUwBR,oBAAS,GAVjC,mBAUPS,EAVO,KAUMC,EAVN,OAW8BV,mBAAS,MAXvC,mBAWPW,EAXO,KAWSC,EAXT,OAYwCZ,mBAAS,MAZjD,mBAYPa,EAZO,KAYcC,EAZd,OAckBd,mBAAS,IAd3B,mBAcPe,EAdO,KAcGC,EAdH,OAe8BhB,oBAAS,GAfvC,mBAePiB,EAfO,KAeSC,EAfT,OAgB8ClB,oBAAS,GAhBvD,mBAgBPmB,EAhBO,KAgBiBC,EAhBjB,OAiBwCpB,oBAAS,GAjBjD,mBAiBPqB,EAjBO,KAiBcC,EAjBd,OAkBoCtB,oBAAS,GAlB7C,mBAkBPuB,EAlBO,KAkBYC,EAlBZ,OAoB8BxB,oBAAS,GApBvC,mBAoBPyB,EApBO,KAoBSC,GApBT,QAqB4B1B,mBAAS,MArBrC,qBAqBP2B,GArBO,MAqBQC,GArBR,SAuBoB5B,oBAAS,GAvB7B,qBAuBP6B,GAvBO,MAuBIC,GAvBJ,MAyBd,SAAS/D,KACP,IAAMgE,EAASC,qBAAoC3B,EAAQ4B,eAC3D,OAAQF,GAAUA,EAAOG,WAAaH,EAAOG,UAAU,SAAOC,EAkMhE,OAtFAC,qBAAU,WACRC,SAASC,iBAAiB,UAAU,WAClC,IAAMC,EACJF,SAASG,gBAAgBC,aACzBJ,SAASG,gBAAgBE,aACzBL,SAASG,gBAAgBG,UAEvBC,SAASL,IAAiBA,EAAe,IAC3CM,QAAQC,IAAI,SACZ1B,GAA0B,OAI9B2B,OAAOT,iBAAiB,SAAS,WAC/BO,QAAQC,IAAI,UACZlC,GAAkB,SAACD,GAAD,OAChBA,GAAkB,IAAIrC,KAASqC,GApJR,KAqJnB,KACAA,UAGP,IAEHyB,qBAhIA,WACO/B,GACH2C,IACG5C,IADH,yBAEG6C,MAAK,SAACC,GACLL,QAAQC,IAAII,EAAIpF,KAAKqF,cACrB7C,EAAW4C,EAAIpF,KAAKqF,iBAErBC,OAAM,SAACC,GACNR,QAAQC,IAAIO,GACZ/C,EAAW,WAsHI,CAACD,EAASP,IACjCsC,qBAlHA,YACM/B,GAAaM,GAAmBJ,IAClC+C,aAAazC,GAEbmC,IACG5C,IADH,2CAC2CC,IACxC4C,MAAK,SAACC,GACL,IAAMpF,EAAOoF,EAAIpF,KAAKA,KACtB+E,QAAQC,IAAIhF,UACLA,EAAKyF,SACZ/C,EAAS1C,GACT8C,EAAkB,IAAItC,MAEtBwC,EACE0C,YAAW,WACTX,QAAQC,IAAI,gBACZlC,EAAkB,QA1DD,OA8DrB,IAAM6C,EAASC,KAAKC,KACjB7F,EAAI,YAAJ,OAAgCA,EAAI,WAAkB,IAAU,GAG7D8F,EAAMF,KAAKG,IAAI,IAAM,KAAOJ,EAAQ,GAE1CpB,SAASG,gBAAgBpE,MAAM0F,YAC7B,uBADF,cAESF,EAFT,gBAKAvB,SAASG,gBAAgBpE,MAAM0F,YAC7B,sBADF,cAESF,EAFT,mBAKDR,OAAM,SAACC,GACNR,QAAQkB,KAAKV,MAEdW,SAAQ,WACPtD,GAAe,SA0EF,CAACL,EAASP,EAASa,IACxCyB,qBAtEA,WACE,GACE/B,IACCc,GAA0BJ,EAASkD,OAAS,KAC5C1C,IACAF,EACD,CACAC,GAAuB,GACvBF,GAA0B,GAE1B,IAAM8C,EAAcR,KAAKS,KAAKpD,EAASkD,OAnG1B,IAmG+C,EAC5DpB,QAAQC,IAAIoB,GAEZlB,IACG5C,IADH,2FAEwFC,EAFxF,qBAtGa,GAsGb,iBAE6H6D,EAF7H,mBAEmJE,oCAC/I,CACEC,QAAS,CACP,eAAgB,uCAIrBpB,MAAK,SAACC,GACLL,QAAQC,IAAII,EAAIpF,KAAKiD,WAEnBmC,EAAIpF,KAAKiD,SAASkD,OAlHX,IAmHPf,EAAIpF,KAAKwG,cAAgBvD,EAASkD,OAASf,EAAIpF,KAAKiD,SAASkD,SAE7DzC,GAAqB,GAEvBR,EAAYD,EAASwD,OAAOrB,EAAIpF,KAAKiD,cAEtCqC,OAAM,SAACC,GACNR,QAAQkB,KAAKV,GACb7B,GAAqB,MAEtBwC,SAAQ,WACP9C,GAAkB,GAClBI,GAAuB,WAG3BF,GAA0B,KA6BN,CAACf,EAASP,EAASqB,IAE3CiB,qBAAU,WACRoB,YAAW,WACL/C,GAAeQ,GACjBoB,SAASmC,KAAK/E,UAAUC,IAAI,UAE9BoC,GAAarB,GAAeQ,KArKX,KAuKlB,CAACR,EAAaQ,IAEjBmB,qBAAU,WACR,GAAIP,GAAW,CACb,IAAME,GACHxB,GACDF,IACC,CAAC,KAAM,KAAM,KAAM,KAAM,MAAMvB,SAASuB,EAAQ4B,gBACjDJ,GAEEE,GAA4B,OAAlBJ,IACZC,GAAiB,GAGnBF,GAAkBK,MAEnB,CAACxB,EAAOF,EAASwB,GAAWF,KAE/BS,qBAAU,WACJX,GACoB,IAAlBE,KACF6B,YAAW,WACTiB,aAAY,WACV7C,IAAiB,SAACD,GAAD,OACfA,EAAgB,EAAIA,EAAgB,EAAI,OAEzC,OACF,KAEH6B,YAAW,WACTnB,SAASmC,KAAK/E,UAAUiF,OAAO,UAC/BlB,YAAW,WACT1D,EAAQ6E,KAAK,MACbrE,EAAW,IACXE,EAAS,MACTE,GAAe,GACfE,EAAkB,MAClBE,EAAuB,MACvBE,EAAY,IACZE,GAAkB,GAClBE,GAA0B,GAC1BE,GAAuB,GACvBE,GAAqB,GACrBE,IAAkB,GAClBE,GAAiB,MACjBE,IAAa,KACZ,OACF,QAGN,CAACL,EAAgBE,GAAe7B,IAGjC,oCACE,kBAAC,EAAD,MACC+B,GACC,oCACE,kBAAC,EAAD,CACElE,KACE4C,EACKF,GACC2B,yBACE3B,EAAQ4B,gBAEZ1B,EAAM5C,KACN,KAGR,8BACG4C,EACC,oCACE,kBAAC,EAAD,CACEzC,KAAMyC,EAENxC,YAAQoE,IAEV,6BAAS1E,UAAU,YAChBsD,EAAS6D,KAAI,SAACC,EAASC,GACtB,OAAO,kBAAC,EAAD,CAASC,IAAKD,EAAGhH,KAAM+G,EAAS9G,OAAQA,UAEhDgD,EAASkD,OAAS,GAAK1C,EACtB,wBAAI9D,UAAU,sBAAd,4BAGEsD,EAASkD,OAAS,GAAK5C,EACzB,wBAAI5D,UAAU,sBAAd,gCAGE,OAGNgE,EACF,wBAAIhE,UAAU,YAAd,0BAC0B,IACtB4C,GACA2B,yBACE3B,EAAQ4B,gBAEV5B,EAAQ4B,cANZ,oBAOoBN,GAPpB,aAUA,wBAAIlE,UAAU,YAAd,0BAC0B,IACvB,CACC,gBACA,iBACA,QACA,qBACA,SAEA,CAAC,KAAM,KAAM,KAAM,KAAM,MAAMuH,QAAQ3E,EAAQ4B,iBAC5C5B,EAVP,qCAgBJ,OCvRK4E,MAZf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,KACV,kBAAC,EAAD,UCCUC,QACW,cAA7BpC,OAAO7C,SAASkF,UAEe,UAA7BrC,OAAO7C,SAASkF,UAEhBrC,OAAO7C,SAASkF,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnD,SAASoD,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3C,MAAK,SAAA4C,GACJA,EAAaC,gBAEd1C,OAAM,SAAA2C,GACLlD,QAAQkD,MAAMA,EAAMC,c","file":"static/js/main.4b197b89.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Loading() {\n  return (\n    <div className=\"Loading\">\n      <div className=\"LoadingRing\">\n        <div className=\"LoadingMask\"></div>\n      </div>\n      <h3 className=\"centered\">Loading...</h3>\n    </div>\n  );\n}\n\nexport default Loading;\n","import React from \"react\";\n\nfunction Header({ name }) {\n  return (\n    <>\n      <div className=\"Title\">\n        <a href=\"./\">\n          <h1>\n            COVID <span>|</span> Headline\n          </h1>\n        </a>\n        <nav>\n          <a href=\"./?country=US\">US</a>\n          <a href=\"./?country=GB\">UK</a>\n          <a href=\"./?country=CN\">China</a>\n          <a href=\"./?country=RU\">Russia</a>\n          <a href=\"./?country=JP\">Japan</a>\n        </nav>\n      </div>\n\n      {name ? (\n        <h2 className=\"Subtitle\">\n          Latest COVID&#8209;19 Statistics and Top Headlines in{\" \"}\n          <span>{name}</span>\n        </h2>\n      ) : (\n        <h2 className=\"Subtitle\">\n          Latest COVID&#8209;19 Statistics and Top Headlines\n        </h2>\n      )}\n    </>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Stats({ data, locale }) {\n  if (data) {\n    const fatalityRate =\n      data[\"latest_data\"][\"deaths\"] / data[\"latest_data\"][\"confirmed\"];\n\n    const recoveryRate =\n      data[\"latest_data\"][\"recovered\"] / data[\"latest_data\"][\"confirmed\"];\n\n    const activeRate = 1 - fatalityRate - recoveryRate;\n\n    return (\n      <section className=\"Stats\">\n        <div className=\"NumberRow\">\n          <div>\n            <h4>Cases</h4>\n            <p className=\"Total\">\n              {data[\"latest_data\"][\"confirmed\"].toLocaleString(locale)} Total\n            </p>\n            {data[\"today\"][\"confirmed\"] || data[\"today\"][\"deaths\"] ? (\n              <p className=\"Today\">\n                +{data[\"today\"][\"confirmed\"].toLocaleString(locale)} Today\n              </p>\n            ) : null}\n          </div>\n\n          <div>\n            <h4>Deaths</h4>\n            <p className=\"Total\">\n              {data[\"latest_data\"][\"deaths\"].toLocaleString(locale)} Total\n            </p>\n            {data[\"today\"][\"confirmed\"] || data[\"today\"][\"deaths\"] ? (\n              <p className=\"Today\">\n                +{data[\"today\"][\"deaths\"].toLocaleString(locale)} Today\n              </p>\n            ) : null}\n          </div>\n        </div>\n\n        <div className=\"PercentageRow\">\n          <div>\n            <h4>Active</h4>\n            <p>\n              {activeRate.toLocaleString(locale, {\n                style: \"percent\",\n                maximumFractionDigits: 2,\n              })}\n            </p>\n          </div>\n\n          <div>\n            <h4>Fatality</h4>\n            <p>\n              {fatalityRate.toLocaleString(locale, {\n                style: \"percent\",\n                maximumFractionDigits: 2,\n              })}\n            </p>\n          </div>\n\n          <div>\n            <h4>Recovered</h4>\n            <p>\n              {recoveryRate.toLocaleString(locale, {\n                style: \"percent\",\n                maximumFractionDigits: 2,\n              })}\n            </p>\n          </div>\n        </div>\n\n        <p className=\"UpdatedAt\">\n          Last updated at{\" \"}\n          <span>\n            {new Date(data[\"updated_at\"]).toLocaleString(locale, {\n              year: \"numeric\",\n              month: \"numeric\",\n              day: \"numeric\",\n              hour: \"numeric\",\n              minute: \"numeric\",\n              timeZoneName: \"short\",\n            })}\n          </span>\n        </p>\n      </section>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default Stats;\n","import React from \"react\";\n\nfunction Article({ data, locale }) {\n  if (data) {\n    return (\n      <a href={data[\"url\"]} className=\"Article\">\n        <div className={`ArticleInfo${data[\"urlToImage\"] ? \"\" : \" no-image\"}`}>\n          <h4>{data[\"title\"]}</h4>\n          {data[\"description\"] && !data[\"description\"].includes(\"�\") ? (\n            <p>{data[\"description\"]}</p>\n          ) : null}\n          <p className=\"ArticleDate\">\n            {new Date(data[\"publishedAt\"]).toLocaleDateString(locale, {\n              year: \"numeric\",\n              month: \"long\",\n              day: \"numeric\",\n              hour: \"numeric\",\n              minute: \"numeric\",\n            })}\n          </p>\n        </div>\n\n        {data[\"urlToImage\"] ? (\n          <>\n            <img\n              className=\"ArticleImg\"\n              src={data[\"urlToImage\"]}\n              alt={data[\"title\"]}\n              onLoad={(e) => {\n                if (!e.target.parentNode.lastChild.style.backgroundImage) {\n                  e.target.parentNode.firstChild.classList.add(\"no-image\");\n                  e.target.parentNode.lastChild.style.display = \"none\";\n                  e.target.style.display = \"none\";\n                }\n              }}\n              onError={(e) => {\n                e.target.parentNode.firstChild.classList.add(\"no-image\");\n                e.target.parentNode.lastChild.style.display = \"none\";\n                e.target.style.display = \"none\";\n              }}\n            />\n            <div\n              className=\"ArticleImgContainer\"\n              style={{ backgroundImage: `url(${data[\"urlToImage\"]})` }}\n            ></div>\n          </>\n        ) : null}\n      </a>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default Article;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport * as CountryLocaleMap from \"country-locale-map\";\n\nimport Loading from \"../components/Loading\";\nimport Header from \"../components/Header\";\nimport Stats from \"../components/Stats\";\nimport Article from \"../components/Article\";\n\nfunction Home() {\n  const pageSize = 20;\n  const loadingDelay = 0;\n  const loadNewStatsInterval = 1800000; // 30 min\n\n  const history = useHistory();\n  const [country, setCountry] = useState(\n    new URLSearchParams(history.location.search).get(\"country\") || \"\"\n  );\n  const [stats, setStats] = useState(null);\n  const [statsLoaded, setStatsLoaded] = useState(false);\n  const [lastLoadedDate, setLastLoadedDate] = useState(null);\n  const [loadNewStatsTimeout, setLoadNewStatsTimeout] = useState(null);\n\n  const [articles, setArticles] = useState([]);\n  const [articlesLoaded, setArticlesLoaded] = useState(false);\n  const [shouldLoadMoreArticles, setShouldLoadMoreArticles] = useState(false);\n  const [loadingMoreArticles, setLoadingMoreArticles] = useState(false);\n  const [allArticlesLoaded, setAllArticlesLoaded] = useState(false);\n\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n  const [redirectTimer, setRedirectTimer] = useState(null);\n\n  const [allLoaded, setAllLoaded] = useState(false);\n\n  function locale() {\n    const result = CountryLocaleMap.getCountryByAlpha2(country.toUpperCase());\n    return (result && result.languages && result.languages[0]) || undefined;\n  }\n\n  function getLocation() {\n    if (!country) {\n      axios\n        .get(`https://ipapi.co/json`)\n        .then((res) => {\n          console.log(res.data.country_code);\n          setCountry(res.data.country_code);\n        })\n        .catch((err) => {\n          console.log(err);\n          setCountry(\"US\");\n        });\n    }\n  }\n\n  function loadStats() {\n    if (country && (!lastLoadedDate || !stats)) {\n      clearTimeout(loadNewStatsTimeout);\n\n      axios\n        .get(`https://corona-api.com/countries/${country}`)\n        .then((res) => {\n          const data = res.data.data;\n          console.log(data);\n          delete data.timeline;\n          setStats(data);\n          setLastLoadedDate(new Date());\n\n          setLoadNewStatsTimeout(\n            setTimeout(() => {\n              console.log(\"auto-refresh\");\n              setLastLoadedDate(null);\n            }, loadNewStatsInterval)\n          );\n\n          const logVal = Math.log2(\n            (data[\"latest_data\"][\"deaths\"] / data[\"population\"]) * 1000000 + 1\n          );\n\n          const hue = Math.max(140 - 13.5 * logVal, 0);\n\n          document.documentElement.style.setProperty(\n            \"--light-accent-color\",\n            `hsl(${hue}, 76%, 60%)`\n          );\n\n          document.documentElement.style.setProperty(\n            \"--dark-accent-color\",\n            `hsl(${hue}, 66%, 45%)`\n          );\n        })\n        .catch((err) => {\n          console.warn(err);\n        })\n        .finally(() => {\n          setStatsLoaded(true);\n        });\n    }\n  }\n\n  function loadArticles() {\n    if (\n      country &&\n      (shouldLoadMoreArticles || articles.length < 1) &&\n      !allArticlesLoaded &&\n      !loadingMoreArticles\n    ) {\n      setLoadingMoreArticles(true);\n      setShouldLoadMoreArticles(false);\n\n      const pageLoading = Math.ceil(articles.length / pageSize) + 1;\n      console.log(pageLoading);\n\n      axios\n        .get(\n          `https://cors-anywhere.herokuapp.com/https://newsapi.org/v2/top-headlines?country=${country}&pageSize=${pageSize}&page=${pageLoading}&apiKey=${process.env.REACT_APP_NEWS_API_KEY}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n          }\n        )\n        .then((res) => {\n          console.log(res.data.articles);\n          if (\n            res.data.articles.length < pageSize ||\n            res.data.totalResults <= articles.length + res.data.articles.length\n          ) {\n            setAllArticlesLoaded(true);\n          }\n          setArticles(articles.concat(res.data.articles));\n        })\n        .catch((err) => {\n          console.warn(err);\n          setAllArticlesLoaded(true);\n        })\n        .finally(() => {\n          setArticlesLoaded(true);\n          setLoadingMoreArticles(false);\n        });\n    } else {\n      setShouldLoadMoreArticles(false);\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"scroll\", () => {\n      const scrollBottom =\n        document.documentElement.scrollHeight -\n        document.documentElement.clientHeight -\n        document.documentElement.scrollTop;\n\n      if (isFinite(scrollBottom) && scrollBottom < 5) {\n        console.log(\"load!\");\n        setShouldLoadMoreArticles(true);\n      }\n    });\n\n    window.addEventListener(\"focus\", () => {\n      console.log(\"focus!\");\n      setLastLoadedDate((lastLoadedDate) =>\n        lastLoadedDate && new Date() - lastLoadedDate >= loadNewStatsInterval\n          ? null\n          : lastLoadedDate\n      );\n    });\n  }, []);\n\n  useEffect(getLocation, [country, history]);\n  useEffect(loadStats, [country, history, lastLoadedDate]);\n  useEffect(loadArticles, [country, history, shouldLoadMoreArticles]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (statsLoaded && articlesLoaded) {\n        document.body.classList.add(\"Loaded\");\n      }\n      setAllLoaded(statsLoaded && articlesLoaded);\n    }, loadingDelay);\n  }, [statsLoaded, articlesLoaded]);\n\n  useEffect(() => {\n    if (allLoaded) {\n      const result =\n        !stats &&\n        country &&\n        ![\"US\", \"GB\", \"CN\", \"RU\", \"JP\"].includes(country.toUpperCase()) &&\n        allLoaded;\n\n      if (result && redirectTimer === null) {\n        setRedirectTimer(5);\n      }\n\n      setShouldRedirect(result);\n    }\n  }, [stats, country, allLoaded, redirectTimer]);\n\n  useEffect(() => {\n    if (shouldRedirect) {\n      if (redirectTimer === 5) {\n        setTimeout(() => {\n          setInterval(() => {\n            setRedirectTimer((redirectTimer) =>\n              redirectTimer > 1 ? redirectTimer - 1 : 1\n            );\n          }, 1000);\n        }, 500);\n\n        setTimeout(() => {\n          document.body.classList.remove(\"Loaded\");\n          setTimeout(() => {\n            history.push(\"./\");\n            setCountry(\"\");\n            setStats(null);\n            setStatsLoaded(false);\n            setLastLoadedDate(null);\n            setLoadNewStatsTimeout(null);\n            setArticles([]);\n            setArticlesLoaded(false);\n            setShouldLoadMoreArticles(false);\n            setLoadingMoreArticles(false);\n            setAllArticlesLoaded(false);\n            setShouldRedirect(false);\n            setRedirectTimer(null);\n            setAllLoaded(false);\n          }, 1000);\n        }, 5000);\n      }\n    }\n  }, [shouldRedirect, redirectTimer, history]);\n\n  return (\n    <>\n      <Loading />\n      {allLoaded ? (\n        <>\n          <Header\n            name={\n              stats\n                ? (country &&\n                    CountryLocaleMap.getCountryNameByAlpha2(\n                      country.toUpperCase()\n                    )) ||\n                  stats.name\n                : \"\"\n            }\n          />\n          <main>\n            {stats ? (\n              <>\n                <Stats\n                  data={stats}\n                  // locale={`${CountryLocaleMap.getLocaleByAlpha2(country)}`}\n                  locale={undefined}\n                />\n                <section className=\"Articles\">\n                  {articles.map((article, i) => {\n                    return <Article key={i} data={article} locale={locale()} />;\n                  })}\n                  {articles.length > 0 && allArticlesLoaded ? (\n                    <h3 className=\"centered AllLoaded\">\n                      All Top Headlines Loaded\n                    </h3>\n                  ) : articles.length > 0 && loadingMoreArticles ? (\n                    <h3 className=\"centered AllLoaded\">\n                      Loading More Headlines…\n                    </h3>\n                  ) : null}\n                </section>\n              </>\n            ) : shouldRedirect ? (\n              <h3 className=\"centered\">\n                No Statistics Found For{\" \"}\n                {(country &&\n                  CountryLocaleMap.getCountryNameByAlpha2(\n                    country.toUpperCase()\n                  )) ||\n                  country.toUpperCase()}\n                . Redirecting in {redirectTimer} Seconds.\n              </h3>\n            ) : (\n              <h3 className=\"centered\">\n                No Statistics Found For{\" \"}\n                {[\n                  \"United States\",\n                  \"United Kingdom\",\n                  \"China\",\n                  \"Russian Federation\",\n                  \"Japan\",\n                ][\n                  [\"US\", \"GB\", \"CN\", \"RU\", \"JP\"].indexOf(country.toUpperCase())\n                ] || country}\n                . Please Check Your Connection.\n              </h3>\n            )}\n          </main>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Home from \"./containers/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}